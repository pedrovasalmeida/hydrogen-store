{"version":3,"file":"eslint.js","sources":["../../../../src/cli/services/eslint.ts","../../../../src/cli/commands/hydrogen/add/eslint.ts"],"sourcesContent":["import {HydrogenApp} from '../models/hydrogen'\nimport {genericConfigurationFileNames} from '../constants'\nimport {ui, vscode, npm, file, dependency, path, error} from '@shopify/cli-kit'\nimport stream from 'node:stream'\n\ninterface AddESlintOptions {\n  app: HydrogenApp\n  force: boolean\n  install: boolean\n}\n\nexport async function addESLint({app, force, install}: AddESlintOptions) {\n  const list = new ui.Listr([\n    {\n      title: 'Installing additional dependencies',\n      skip: () => !install,\n      task: async (_, task) => {\n        const requiredDependencies = ['eslint', 'eslint-plugin-hydrogen', 'prettier', '@shopify/prettier-config']\n        await dependency.addNPMDependenciesWithoutVersionIfNeeded(requiredDependencies, {\n          dependencyManager: app.dependencyManager,\n          type: 'prod',\n          directory: app.directory,\n          stderr: new stream.Writable({\n            write(chunk, encoding, next) {\n              task.output = chunk.toString()\n              next()\n            },\n          }),\n          stdout: new stream.Writable({\n            write(chunk, encoding, next) {\n              task.output = chunk.toString()\n              next()\n            },\n          }),\n        })\n        task.title = 'Dependencies installed'\n      },\n    },\n\n    {\n      title: 'Adding ESLint configuration',\n      task: async (_, task) => {\n        const eslintConfigPath = path.join(app.directory, genericConfigurationFileNames.eslint)\n\n        if (await file.exists(eslintConfigPath)) {\n          if (force) {\n            await file.remove(eslintConfigPath)\n          } else {\n            throw new error.Abort('ESLint config already exists.', 'Use --force to override existing config.')\n          }\n        }\n\n        const eslintConfig = await file.format(\n          ['module.exports = {', 'extends: [', `'plugin:hydrogen/recommended'`, ' ],', ' };'].join('\\n'),\n          {path: genericConfigurationFileNames.eslint},\n        )\n\n        await file.write(eslintConfigPath, eslintConfig)\n\n        task.title = 'ESLint configuration added'\n      },\n    },\n    {\n      title: 'Updating package.json',\n      task: async (_, task) => {\n        const packageJSON = await npm.readPackageJSON(app.directory)\n\n        packageJSON.scripts.lint = `eslint --ext .js,.ts,.jsx,.tsx src/`\n\n        packageJSON.prettier = '@shopify/prettier-config'\n\n        await npm.writePackageJSON(app.directory, packageJSON)\n\n        task.title = 'Package.json updated'\n      },\n    },\n    {\n      title: 'Adding editor plugin recommendations',\n      skip: async () => !(await vscode.isVSCode(app.directory)),\n      task: async (_, task) => {\n        await vscode.addRecommendedExtensions(app.directory, ['dbaeumer.vscode-eslint'])\n        task.title = 'Editor plugin recommendations added'\n      },\n    },\n  ])\n  await list.run()\n}\n","import {hydrogenFlags} from '../../../flags'\nimport {addESLint} from '../../../services/eslint'\nimport {load as loadApp, HydrogenApp} from '../../../models/hydrogen'\nimport {Command, Flags} from '@oclif/core'\nimport {cli, path} from '@shopify/cli-kit'\n\nexport default class AddESLint extends Command {\n  static flags = {\n    ...cli.globalFlags,\n    ...hydrogenFlags,\n    force: Flags.boolean({\n      hidden: false,\n      char: 'f',\n      description: 'Overwrite existing configuration',\n      default: false,\n      env: 'SHOPIFY_FLAG_FORCE',\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {\n      flags: {path: pathFlag, install, force},\n    } = await this.parse(AddESLint)\n    const directory = pathFlag ? path.resolve(pathFlag) : process.cwd()\n\n    const app: HydrogenApp = await loadApp(directory)\n\n    await addESLint({app, install, force})\n  }\n}\n"],"names":["loadApp"],"mappings":"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"}