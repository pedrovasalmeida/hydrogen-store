{"version":3,"file":"preview.js","sources":["../../../src/cli/services/preview.ts","../../../src/cli/commands/hydrogen/preview.ts"],"sourcesContent":["import {path, error, system, file, output} from '@shopify/cli-kit'\nimport {fileURLToPath} from 'url'\n\ninterface PreviewOptions {\n  directory: string\n  port: number\n}\n\nexport async function previewInNode({directory, port}: PreviewOptions) {\n  const buildOutputPath = await path.resolve(directory, 'dist/node')\n\n  if (!(await file.exists(buildOutputPath))) {\n    output.info(\n      output.content`Couldnâ€™t find a Node.js server build for this project. Running ${output.token.packagejsonScript(\n        'yarn',\n        'shopify hydrogen build',\n        '--target=node',\n      )} to create one.`,\n    )\n\n    await system.exec('yarn', ['shopify', 'hydrogen', 'build', '--target=node'], {\n      cwd: directory,\n      stdout: process.stdout,\n    })\n  }\n\n  await system.exec('node', ['--enable-source-maps', buildOutputPath], {\n    env: {PORT: `${port}`},\n    cwd: directory,\n    stdout: process.stdout,\n  })\n}\n\nexport async function previewInWorker({directory, port}: PreviewOptions) {\n  const config = {\n    port,\n    workerFile: 'dist/worker/index.js',\n    assetsDir: 'dist/client',\n    buildCommand: 'yarn build',\n    modules: true,\n    watch: true,\n    buildWatchPaths: ['./src'],\n    autoReload: true,\n  }\n\n  await file.write(path.resolve(directory, 'mini-oxygen.config.json'), JSON.stringify(config, null, 2))\n\n  function cleanUp(options: {exit: boolean}) {\n    if (options.exit) {\n      file.remove(path.resolve(directory, 'mini-oxygen.config.json'))\n    }\n  }\n\n  process.on('SIGINT', cleanUp.bind(null, {exit: true}))\n\n  const executable = await oxygenPreviewExecutable()\n\n  await system.exec(executable, [], {\n    env: {NODE_OPTIONS: '--experimental-vm-modules'},\n    cwd: directory,\n    stdout: process.stdout,\n  })\n}\n\nexport const OxygenPreviewExecutableNotFound = new error.Bug(\n  'Could not locate the executable file to run Oxygen locally.',\n)\n\nasync function oxygenPreviewExecutable(): Promise<string> {\n  const cwd = path.dirname(fileURLToPath(import.meta.url))\n  const executablePath = await path.findUp('node_modules/.bin/oxygen-preview', {type: 'file', cwd})\n  if (!executablePath) {\n    throw OxygenPreviewExecutableNotFound\n  }\n  return executablePath\n}\n","import {previewInWorker, previewInNode} from '../../services/preview'\nimport {hydrogenFlags} from '../../flags'\nimport {path, cli} from '@shopify/cli-kit'\nimport {Command, Flags} from '@oclif/core'\n\nexport default class Preview extends Command {\n  static description = 'Run a Hydrogen storefront locally in a worker environment'\n  static flags = {\n    ...cli.globalFlags,\n    path: hydrogenFlags.path,\n    port: Flags.string({\n      char: 'p',\n      hidden: true,\n      description: 'the port to run the preview server on',\n      default: '3000',\n      env: 'SHOPIFY_FLAG_PORT',\n    }),\n    target: Flags.string({\n      char: 't',\n      description: 'the target environment (worker or node)',\n      options: ['node', 'worker'],\n      default: 'worker',\n      env: 'SHOPIFY_FLAG_PREVIEW_TARGET',\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Preview)\n    const directory = flags.path ? path.resolve(flags.path) : process.cwd()\n    const port = parseInt(flags.port, 10)\n\n    if (flags.target === 'worker') {\n      await previewInWorker({directory, port})\n    } else if (flags.target === 'node') {\n      await previewInNode({directory, port})\n    }\n  }\n}\n"],"names":[],"mappings":"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"}