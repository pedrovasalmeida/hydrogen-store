{"version":3,"file":"upgrade.js","sources":["../../src/cli/commands/upgrade.ts"],"sourcesContent":["import {Command, Flags} from '@oclif/core'\nimport {dependency, error, file, output, path} from '@shopify/cli-kit'\n\nexport default class Upgrade extends Command {\n  static description = 'Upgrade the Shopify CLI'\n\n  static flags = {\n    path: Flags.string({\n      hidden: false,\n      description: 'The path to your project directory.',\n      parse: (input, _) => Promise.resolve(path.resolve(input)),\n      env: 'SHOPIFY_FLAG_PATH',\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Upgrade)\n    const directory = flags.path ? path.resolve(flags.path) : process.cwd()\n\n    const projectDir = await this.getProjectDir(directory)\n    if (!projectDir) {\n      throw new error.Abort(\n        output.content`Couldn't find the configuration file for ${output.token.path(\n          directory,\n        )}, are you in a Shopify project directory?`,\n      )\n    }\n    const packageJson = JSON.parse(await file.read(path.join(projectDir, 'package.json')))\n    const packageJsonDependencies: {[key: string]: string} = packageJson.dependencies || {}\n    const packageJsonDevDependencies: {[key: string]: string} = packageJson.devDependencies || {}\n\n    const cliDependency = '@shopify/cli'\n    let currentVersion: string = {...packageJsonDependencies, ...packageJsonDevDependencies}[cliDependency]\n    if (currentVersion.slice(0, 1).match(/[\\^~]/)) currentVersion = this.config.version\n    const newestVersion = await dependency.checkForNewVersion(cliDependency, currentVersion)\n\n    if (!newestVersion) {\n      output.info(\n        output.content`You're on the latest version, ${output.token.yellow(currentVersion)}, no need to upgrade!`,\n      )\n      return\n    }\n\n    output.info(\n      output.content`Upgrading CLI from ${output.token.yellow(currentVersion)} to ${output.token.yellow(\n        newestVersion,\n      )}...`,\n    )\n\n    await this.installJsonDependencies('prod', packageJsonDependencies, projectDir)\n    await this.installJsonDependencies('dev', packageJsonDevDependencies, projectDir)\n\n    output.success(`Upgraded Shopify CLI to version ${newestVersion}`)\n  }\n\n  async getProjectDir(directory: string) {\n    return path.findUp(\n      async (dir: string) => {\n        const configFilesExist = await Promise.all(\n          ['shopify.app.toml', 'hydrogen.config.js', 'hydrogen.config.ts'].map(async (configFile) => {\n            return file.exists(path.join(dir, configFile))\n          }),\n        )\n        if (configFilesExist.some((bool) => bool)) return dir\n      },\n      {\n        cwd: directory,\n        type: 'directory',\n      },\n    )\n  }\n\n  async installJsonDependencies(\n    depsEnv: dependency.DependencyType,\n    deps: {[key: string]: string},\n    directory: string,\n  ): Promise<void> {\n    const packages = ['@shopify/cli', '@shopify/app', '@shopify/cli-hydrogen']\n    const packagesToUpdate = packages.filter((pkg: string): boolean => {\n      const pkgRequirement: string | undefined = deps[pkg]\n      return Boolean(pkgRequirement)\n    })\n\n    if (packagesToUpdate.length > 0) {\n      await dependency.addLatestNPMDependencies(packagesToUpdate, {\n        dependencyManager: await dependency.getDependencyManager(directory),\n        type: depsEnv,\n        directory,\n        stdout: process.stdout,\n        stderr: process.stderr,\n      })\n    }\n  }\n}\n"],"names":[],"mappings":"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"}